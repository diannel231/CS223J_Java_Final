package maze_game;

// Mazes class designs the maze
public class Mazes {
	
	public static boolean mazeDesign1(int x, int y) {
		
		// Instead of setting up each panel individually, a 2D array
		// is used to draw the maze
	    int[][] maze = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
	    				 { 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, },
	    				 { 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, },
	    				 { 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, },
	    				 { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
	    		
	    // If it's 0, it will return true
		if(maze[x][y] == 0) {
			
			// In the main class, it will set the panel to black
			return true;
		}

		else {		
			// This will set the panel to gray
			return false;
		}
	}
	
	// The design for maze 2
	public static boolean mazeDesign2(int x, int y) {
		
		//spot at [6][13]
	    int[][] maze = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
	    				 { 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, },
	    				 { 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, },
	    				 { 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
	    				 { 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, },
	    				 { 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, },
	    				 { 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
	    					

	    if(maze[x][y] == 0) {
			
	    	return true;
	    }

	    else {		

	    	return false;
	    }
	}
	
	// The design for maze 3
	public static boolean mazeDesign3(int x, int y) {
		
		int[][] maze = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
						 { 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, },
						 { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, },
						 { 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, },
					  	 { 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, },
						 { 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, },
						 { 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, },
						 { 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, },
						 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
				
		if(maze[x][y] == 0) {
			
			return true;
	    }

	    else {		

	    	return false;
		}

	}
}
