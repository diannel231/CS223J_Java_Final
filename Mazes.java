package maze_game;

public class Mazes {
	
	public static boolean mazeDesign1(int x, int y) {
		
		
		// spot at [4][6]
	    int[][] maze = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
	    				 { 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, },
	    				 { 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, },
	    				 { 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, },
	    				 { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
	    		

		if(maze[x][y] == 0) {
					
			return true;
		}

		else {		
		
			return false;
		}
	}
	
	public static boolean mazeDesign2(int x, int y) {
		
	    int[][] maze = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
	    				 { 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, },
	    				 { 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, },
	    				 { 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, },
	    				 { 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, },
	    				 { 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, },
	    				 { 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, },
	    				 { 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, },
	    				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
	    					

	    if(maze[x][y] == 0) {
			
	    	return true;
	    }

	    else {		

	    	return false;
	    }
	}
	
	public static boolean mazeDesign3(int x, int y) {
		
		int[][] maze = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
						 { 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, },
						 { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, },
						 { 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, },
					  	 { 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, },
						 { 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, },
						 { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, },
						 { 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, },
						 { 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, },
						 { 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, },
						 { 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, },
						 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
				
		if(maze[x][y] == 0) {
			
			return true;
	    }

	    else {		

	    	return false;
		}

	}
	
	
}
